<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.guodefu</groupId>
    <artifactId>cloudStudy</artifactId>
    <version>1.0.0</version>
    <packaging>pom</packaging>

    <!--项目模块-->
    <modules>
        <!--<module>nacos</module>
        <module>gateway</module>-->
    </modules>

    <!--父依赖项，继承spring-boot可以免去插件版本管理-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.1</version>
        <relativePath/>
    </parent>

    <!--属性,所有依赖的版本统一在这里配置-->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <java.version>17</java.version>
        <spring-cloud.version>2022.0.5</spring-cloud.version>
        <spring-boot.version>3.3.1</spring-boot.version>

    </properties>

    <!--定义依赖项仓库，告诉Maven在构建过程中从指定的仓库获取所需的依赖项-->
    <repositories>
        <!--<repository>
            <id>nexus</id>
            <name>nexus</name>
            <url>http://172.2.0.3/repository/maven-public/</url>
        </repository>-->
    </repositories>

    <!--配置项目构建结果的分发管理，通过deploy命令将构建产物发布到远程 Maven 仓库，供其他开发者或项目使用-->
    <distributionManagement>
        <!--<repository>
            <id>nexus</id>
            <name>nexus</name>
            <url>http://172.2.0.3/repository/maven-releases/</url>
        </repository>-->
    </distributionManagement>

    <!--公共依赖，如果有依赖是所有模块都需要引入的，则应在此处统一引入，而不应各个模块都引入一遍-->
    <dependencies>
        <!--lombok-->
        <!--<dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>-->
    </dependencies>

    <!--依赖管理，提前在这里定好依赖的版本，各个模块需要某些依赖时，直接引入不需再定义版本-->
    <dependencyManagement>
        <dependencies>
            <!--本项目自身的公共依赖-->

            <!--spring cloud -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--spring cloud 阿里巴巴-->
            <!--<dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>2.2.6.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>-->
            <!--web-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring-boot.version}</version>
                <exclusions>
                    <!-- 排除自带的logback依赖 -->
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-gateway</artifactId>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
